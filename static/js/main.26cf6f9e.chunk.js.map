{"version":3,"sources":["context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","AppContext","React","createContext","AppProvider","children","useState","isLoading","setIsLoading","show","msg","error","setError","movies","setMovies","query","setQuery","fetchMovies","url","a","fetch","response","json","data","Response","Search","Error","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","key","src","alt","Home","SingleMovie","useParams","setMovie","fetchMovie","plot","Plot","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26cf6f9e.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\n// make sure to use https\r\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [error, setError] = useState({ show: false, msg: '' });\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [query, setQuery] = useState('batman');\r\n\r\n\tconst fetchMovies = async (url) => {\r\n\t\tsetIsLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tif (data.Response === 'True') {\r\n\t\t\t\tsetMovies(data.Search);\r\n\t\t\t\tsetError({ show: false, msg: '' });\r\n\t\t\t} else {\r\n\t\t\t\tsetError({ show: true, msg: data.Error });\r\n\t\t\t}\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMovies(`${API_ENDPOINT}&s=${query}`);\r\n\t}, [query]);\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tisLoading,\r\n\t\t\t\terror,\r\n\t\t\t\tmovies,\r\n\t\t\t\tquery,\r\n\t\t\t\tsetQuery,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n\treturn useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\nconst SearchForm = () => {\r\n\tconst { query, setQuery, error } = useGlobalContext();\r\n\r\n\treturn (\r\n\t\t<form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\r\n\t\t\t<h2>search movies</h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\tvalue={query}\r\n\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t/>\r\n\t\t\t{error.show && <div className=\"error\">{error.msg}</div>}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport { useGlobalContext } from './context';\r\nimport { Link } from 'react-router-dom';\r\nconst url =\r\n\t'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\r\n\r\nconst Movies = () => {\r\n\tconst { movies, isLoading } = useGlobalContext();\r\n\r\n\tif (isLoading) {\r\n\t\treturn <div className=\"loading\">Loading...</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className=\"movies\">\r\n\t\t\t{movies.map((movie) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\timdbID: id,\r\n\t\t\t\t\tPoster: poster,\r\n\t\t\t\t\tTitle: title,\r\n\t\t\t\t\tYear: year,\r\n\t\t\t\t} = movie;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Link to={`/movies/${id}`} key={id} className=\"movie\">\r\n\t\t\t\t\t\t<article>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={poster === 'N/A' ? url : poster}\r\n\t\t\t\t\t\t\t\talt={title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"movie-info\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"title\">{title}</h4>\r\n\t\t\t\t\t\t\t\t<p>{year}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport Form from './SearchForm';\r\nimport Movies from './Movies';\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<Form />\r\n\t\t\t<Movies />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { API_ENDPOINT } from './context';\r\nconst url =\r\n\t'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\r\n\r\nconst SingleMovie = () => {\r\n\tconst { id } = useParams();\r\n\tconst [movie, setMovie] = useState({});\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [error, setError] = useState({ show: false, msg: '' });\r\n\r\n\tconst fetchMovie = async (url) => {\r\n\t\tconst response = await fetch(url);\r\n\t\tconst data = await response.json();\r\n\t\tif (data.Response === 'False') {\r\n\t\t\tsetError({ show: true, msg: data.Error });\r\n\t\t\tsetIsLoading(false);\r\n\t\t} else {\r\n\t\t\tsetMovie(data);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMovie(`${API_ENDPOINT}&i=${id}`);\r\n\t}, [id]);\r\n\r\n\tif (isLoading) {\r\n\t\treturn <div className=\"loading\"></div>;\r\n\t}\r\n\r\n\tif (error.show) {\r\n\t\treturn (\r\n\t\t\t<div className=\"page-error\">\r\n\t\t\t\t<h1>{error.msg}</h1>\r\n\t\t\t\t<Link to=\"/movies-db\" className=\"btn\">\r\n\t\t\t\t\tback to movies\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst { Poster: poster, Title: title, Plot: plot, Year: year } = movie;\r\n\r\n\treturn (\r\n\t\t<section className=\"single-movie\">\r\n\t\t\t<img src={poster === 'N/A' ? url : poster} alt={title} />\r\n\t\t\t<div className=\"single-movie-info\">\r\n\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t<p>{plot}</p>\r\n\t\t\t\t<h4>{year}</h4>\r\n\t\t\t\t<Link to=\"/movies-db\" className=\"btn\">\r\n\t\t\t\t\tBack to movies\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SingleMovie;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Movie from './SingleMovie';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/movies-db\" exact>\r\n\t\t\t\t<Home />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/movies/:id\" children={<Movie />} />\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AppProvider } from './context';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<AppProvider>\r\n\t\t\t<Router>\r\n\t\t\t\t<App />\r\n\t\t\t</Router>\r\n\t\t</AppProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}